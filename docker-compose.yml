version: "3.8"

services:
  auth_api:
    build: auth
    image: auth_api
    env_file:
      - deploys/prod/auth_api.env
    depends_on:
      - postgres
      - redis
    ports:
      - 5555:5000
    restart: always

  movie_api:
    build: movie_api
    image: movie_api
    env_file:
      - deploys/prod/movie_api.env
    depends_on:
      - redis
    ports:
      - 5556:5000
    restart: always

  nginx:
    image: nginx:1.19.2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_sites:/etc/nginx/conf.d:ro
    ports:
      - 8080:80
      - 8081:81
    depends_on:
      - movie_api
      - auth_api
    restart: always

  etl:
    image: nikitak/praktikum-etl-sprint-2.5:latest
    environment:
      PG_USER: "postgres"
      PG_PASS: "devpass"
      PG_HOST: "postgres"
      PG_DB: "postgres"
      POSTGRES_URI: "postgresql://postgres:devpass@postgres:5432/postgres"
      ES_URL: "http://elasticsearch:9200"
      REDIS_HOST: redis
    depends_on:
      - elasticsearch
      - redis
    restart: always

  elasticsearch:
    image: elasticsearch:7.10.1
    environment:
      discovery.type: "single-node"
    ports:
      - 9200:9200
#    volumes:
#      - elasticdb:/usr/share/elasticsearch/data
    restart: always

  postgres:
    image: postgres:12.1
    environment:
      POSTGRES_PASSWORD: devpass
    volumes:
      - ./movie_api/postgres_init:/docker-entrypoint-initdb.d
#      - postgresdb:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always

  redis:
    image: redis:6-alpine
#    volumes:
#      - redisdata:/data
    ports:
      - 6379:6379
    restart: always


#volumes:
#  redisdata:
#  postgresdb:
#  elasticdb:
